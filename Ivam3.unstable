#!/data/data/com.termux/files/usr/bin/bash
set -euo pipefail
IFS=$'\n\t'
trap ctrl_c 2
function ctrl_c () {
		echo
		printf "$yellow [!]$red Going me on https://t.me/Ivam3byCinderella$reset
		\n"
	}
echo $(clear)
#
#VAR
		negro='\033[1;30m'
                red='\033[1;31m'
                green='\033[1;32m'
                yellow='\033[1;33m'
                blue='\033[1;34m'
                magenta='\033[1;35m'
                cyan='\033[1;36m'
                reset='\033[0m'
		apktool=$(find $PREFIX/bin -name "apktool")
		java=$(find $PREFIX/bin -name "java")
		msf=$(find $PREFIX/opt -name "metasploit-framework" -type d)

function Chao_chao {
	printf "$cyan"
        echo "#-----THANKS TO MY MASTER CINDERELLA-----#"
        echo "#                                        #"
        echo "#             People don't die           #"
        echo "#    If they still live in the hearts    #"
        echo "#           of their loved ones          #"
        echo "#       We love her ... We miss her      #"
        echo "#                                        #"
        echo "#-------------------RIP------------------#"
        echo
printf "$reset"
}
java32() {
	printf "$green\n[!] Now wait until jdk-8 is installing ...$reset\n"
	sleep 1
	echo $(wget https://github.com/ivam3/java/releases/download/v8-151/jdk8_arm.tar.gz)
	sleep 1
	printf "$green\n[!] Moving jdk into system ...$reset\n"
	mv jdk8_arm.tar.gz $PREFIX/share
	sleep 1
	printf "$green\n[!] Extracting ...$reset\n"
	cd $PREFIX/share
	tar -xhf jdk8_arm.tar.gz
	sleep 1
	printf "$green\n[!] Moving wrapper scripts for java 8$reset\n"
		if [ ! -z $java ]; then
			rm $java
		fi
		if [ ! -z $apktool ]; then
			rm $apktool
		fi
	cp $HOME/java/.embed/apktool $PREFIX/bin/
        cp $HOME/java/openjdk/apktool_jar/apktool-2.2.2.jar $PREFIX/var/spool/apktool.jar
        cp $HOME/java/openjdk/lib/libc++_shared.so $PREFIX/share/glib/
        mv bin/* $PREFIX/bin
        rm -rf $PREFIX/share/bin
        chmod 711 $PREFIX/share/jdk8/man/ja_JP.UTF-8/man1/*
        mv $PREFIX/share/jdk8/bin/java $PREFIX/share/jdk8/bin/java.O
        cp $HOME/java/openjdk/bin/java $PREFIX/share/jdk8/bin/
        Chao_chao
        sleep 1
}
java64() {
	printf "$green\n[!] Now wait until jdk-8 is installing ...$reset\n"
	sleep 1
	echo $(wget https://github.com/ivam3/java/releases/download/v8/jdk8_aarch64.tar.gz)
	sleep 1
	printf "$green\n[!] Moving jdk into system ...$reset\n"
	mv jdk8_arm.tar.gz $PREFIX/share
	echo
	sleep 1
	printf "$green\n[!] Extracting ...$reset\n"
	cd $PREFIX/share
	tar -xhf jdk8_arm.tar.gz
	sleep 1
	printf "$green\n[!] Moving wrapper scripts for java 8$reset\n"
	mv bin/* $PREFIX/bin
	rm -rf $PREFIX/share/bin
		if [ ! -z $apktool ]; then
			rm $PREFIX/bin/apktool
		fi
	cp $HOME/java/.embed/apktool $PREFIX/bin/
	cp $HOME/java/openjdk/apktool_jar/apktool_2.3.4.jar $PREFIX/var/spool/apktool.jar
	cp $HOME/java/openjdk/lib/libc++_shared.so $PREFIX/share/glib/
	chmod 711 $PREFIX/share/jdk8/man/ja_JP.UTF-8/man1/*
	Chao_chao
	sleep 1
	echo
}

#BANNER

printf "$green"
        echo "      =============================="
        echo "      .___.                 ______,"
        echo "      |   |__ ______   ___  \_____ \ "
        echo "      |   \ \/ /\__ \ /   \    (__ <,"
        echo "      |   |\   / __ \| Y Y \ \      \ "
        echo "      |___| \_/ (____|__|_| /______ /"
        echo "                     \/    \/      \/ "
        echo "      ====== By ___ Cinderella ======"
        echo
printf "$cyan"
        echo "          [---] Join me on [---]"
        echo "[-] www.youtube.com/c/ivam3bycinderella [-]"
        echo "            [-] t.me/ivam3 [-]"
        echo "
        "
sleep 1
arch=`dpkg --print-architecture`
printf "$green [!] Package size is around 80mb before extraction\n\n"
printf "$red"
while read -p "[W] Do you want to continue (y|Y/n|N) >> " yesorno && [ -z $yesorno ]; do
	echo "
	"
	printf "$R [W] Please, choose an option$W\n\n"
done
		if [ $yesorno = 'y' -o $yesorno = 'Y' ] ; then
			echo "
			"
			printf "$green Package will be extracted$reset"
			echo
		else
			Chao_chao
			printf "$red \t Chao chao !!
			\n $reset"
			exit
		fi

#
# This Arch use Apktool from TMP_DIR
#
	if [ $arch = "aarch64" -o $arch = "arm64" ] ; then
		java32
#		java64
#
# This Arch use Apktool from TMP_DIR
#
	elif [ $arch = "armhf" -o $arch = "armv7l" ]; then
		java32
#		java64
#
# This Arch use libld.so & apktool from TMP_DIR
#
	elif [ $arch = "arm" -o $arch = "i868" ]; then
		java32
	else
		Chao_chao
		printf "\n\n$red [W] CINDERELLA : O-ops!! sorry unknown architecture\n\n$reset"
		sleep 5
	fi
#					@IbyC
